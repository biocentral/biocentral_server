services:
  embeddings-db:
    image: postgres:15
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis-jobs:
    image: redis:alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis-jobs:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis-jobs
    restart: unless-stopped

  seaweedfs-master:
    image: chrislusf/seaweedfs
    ports:
      - "9333:9333"
    command: "master -ip=seaweedfs-master"
    networks:
      - seaweedfs-network

  seaweedfs-volume:
    image: chrislusf/seaweedfs
    ports:
      - "8080:8080"
    command: 'volume -dir="/data" -max=5 -mserver="seaweedfs-master:9333"'
    volumes:
      - seaweedfs_data:/data
    depends_on:
      - seaweedfs-master
    networks:
      - seaweedfs-network

  seaweedfs-filer:
    image: chrislusf/seaweedfs
    ports:
      - "${SEAWEEDFS_FILER_PORT}:8888"
    command: 'filer -master="seaweedfs-master:9333"'
    depends_on:
      - seaweedfs-master
      - seaweedfs-volume
    networks:
      - seaweedfs-network
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--quiet", "-Y", "off", "http://seaweedfs-filer:8888/" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 20s

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${EMBEDDINGS_DATA_DIR}
  seaweedfs_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${FILES_DATA_DIR}

networks:
  seaweedfs-network:
    driver: bridge